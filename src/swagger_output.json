{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Manage Users",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v0/healthCheck": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HEALTHCHECK_OK"
            },
            "description": "OK"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR_500"
            },
            "description": "Internal Server Error"
          }
        },
        "auto": false
      }
    },
    "/api/v0/signup": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "photo",
            "in": "formData",
            "description": "Photo of user to upload",
            "required": true,
            "type": "file"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Email of user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Name of user",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "formData",
            "description": "Address of user",
            "type": "string"
          },
          {
            "name": "telephone",
            "in": "formData",
            "description": "Telephone of user",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password of user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SUCCESS_200_CREATE"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/ERROR_400"
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR_500"
            },
            "description": "Internal Server Error"
          }
        },
        "auto": false
      }
    },
    "/api/v0/users": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "description": "Current page showing",
            "type": "int"
          },
          {
            "name": "pageSize",
            "in": "path",
            "description": "Total items showing in per page",
            "type": "int"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SUCCESS_200_GET"
            },
            "description": "OK"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR_500"
            },
            "description": "Internal Server Error"
          }
        },
        "auto": false
      }
    }
  },
  "definitions": {
    "SUCCESS_200_CREATE": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "example": true
        },
        "data": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "5feee38242b97e1f91f8017a"
            },
            "model_information": {
              "type": "string",
              "example": "..."
            },
            "createdAt": {
              "type": "string",
              "example": "2021-01-01T08:55:30.298Z"
            },
            "updatedAt": {
              "type": "string",
              "example": "2021-01-01T08:55:30.298Z"
            },
            "__v": {
              "type": "number",
              "example": 0
            }
          }
        }
      },
      "xml": {
        "name": "SUCCESS_200_CREATE"
      }
    },
    "SUCCESS_200_GET": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "example": true
        },
        "data": {
          "type": "object",
          "properties": {
            "total": {
              "type": "number",
              "example": 5
            },
            "data": {
              "type": "array",
              "items": {}
            }
          }
        }
      },
      "xml": {
        "name": "SUCCESS_200_GET"
      }
    },
    "ERROR_400": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "example": false
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "example": "email"
              },
              "message": {
                "type": "string",
                "example": "Email is invalid!"
              }
            }
          }
        }
      },
      "xml": {
        "name": "ERROR_400"
      }
    },
    "ERROR_500": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "example": false
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "example": "unknow"
              },
              "message": {
                "type": "string",
                "example": "Error message"
              }
            }
          }
        }
      },
      "xml": {
        "name": "ERROR_500"
      }
    },
    "HEALTHCHECK_OK": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "example": true
        },
        "description": {
          "type": "string",
          "example": "Server is alive!"
        }
      },
      "xml": {
        "name": "HEALTHCHECK_OK"
      }
    }
  }
}